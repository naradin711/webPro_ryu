 220412 22회차

[IV] 단일행 함수 ; 내장함수, SQL 주요함수

함수 => 단일행 함수 + 그룹함수(집계함수)

  단일행 함수 (INPUT 1행 -> OUTPUT 1행)
  SELECT HIREDATE, TO_CHAR(HIREDATE, 'YY"년"MM"월"DD"일"') FROM EMP;
  ->  1행의 함수는 반드시 1행의 아웃풋을 출력한다.

  그룹함수 (INPUT N행 -> OUTPUT 1행)
  SELECT SUM (SAL), ROUND(AVG(SAL), 2) FROM EMP; 
  -- SAL 14행의 모든 값을 더해서 SUM 함수 AVG(평균)함수 1행의 값을 출력한다.


 IV -1. 산술함수

SELECT FLOOR(34.5678) FROM DUAL;
SELECT FLOOR(34.5678*100)/100 FROM DUAL;  -- 소수점 2번째 자리에서 내림
SELECT TRUNC(34.5678, 2) FROM DUAL;         -- 소수점 2번째 자리에서 내림
SELECT TRUNC(34.5678) FROM DUAL;            -- 소수점에서 내림
SELECT TRUNC(34.5678, -1) FROM DUAL;        -- 일의 자리에서 내림

SELECT CEIL(34.5678) FROM DUAL;           -- 소수점에서 올림
SELECT CEIL(34.5678*100)/100 FROM DUAL;   -- 소수점 2번째 자리에서 올림
SELECT ROUND(34.5678) FROM DUAL;          -- 소수점에서 반올림
SELECT ROUND(34.5678, 2) FROM DUAL;       -- 소수점 두번째 자리에서 반올림
SELECT ROUND(34.5678, -1) FROM DUAL;      -- 일의 자리에서 반올림

SELECT MOD (9, 2) FROM DUAL;              -- 9%2 나머지 연산자.

IV -2. 문자관련함수

(1) 대소문자 관련
SELECT * FROM EMP WHERE UPPER(JOB) = 'MANAGER'; --JOB에 있는 모든 문자열을 대문자화 
SELECT * FROM EMP WHERE LOWER(JOB) = 'manager';  --JOB에 있는 모든 문자열을 소문자화
SELECT * FROM EMP WHERE INITCAP(JOB) = 'Manager'; --최초의 한글자만 빼고 나머지는 소문자화.


(2) 문자연결 (CONCAT, || 연산자)
SELECT 'AB' || 'CD' || 'EF' || 'GH' FROM DUAL;
SELECT CONCAT(CONCAT('AB', 'CD'), CONCAT ('EF','GH')) FROM DUAL;

-- (3) SUBSTR(STR, 시작위치, 문자갯수) 첫번째 위치가 1, 시작위치는 음수도 가능.
--      SUBSTRB(STR, 시작바이트위치, 문자바이트수)
SELECT SUBSTR ('ORACLE', 3, 2) FROM DUAL; -- 3번째 글자부터 2글자씩 추출
SELECT SUBSTRB ('ORACLE', 3, 2) FROM DUAL; --3번째 바이트부터 2바이트 추출

-- (4) 글자수 LENGH, NOT LENGTH VS 바이트수 (LENTHB)
SELECT LENGTH ('ABC') FROM DUAL; -- 글자수 3
SELECT LENGTHB ('ABC') FROM DUAL; -- 바이트 3
SELECT LENGTH ('오라클') FROM DUAL; -- 글자수 3
SELECT LENGTHB ('오라클') FROM DUAL; -- 바이트 9

(5) INSTR(STR, 찾을 글자) : STR로 인해 찾을 글자의 위치 첫번째 1 없으면 0
--     INSTR(STR, 찾을 글자,  시작위치) : STR을 시작위치에서 찾아서 찾은 글자의 위치, 위치 음수 가능
SELECT INSTR ('ABCABC', 'B' ) FROM DUAL; -- 처음부터 찾아서 처음나오는 찾을값을 반환
SELECT INSTR ('ABCABC', 'B', 3 ) FROM DUAL; -- 앞 3번째 부터 찾아서 처음 나오는 값을 반환
SELECT INSTR ('ABCABC', 'B', -3 ) FROM DUAL; -- 뒤 3번째부터 찾아서 뒤에서 앞으로 찾아서 처음 나오는 값의 위치

(6) LPAD(STR, 자리수, 채울문자) STR을 자리수 만큼 확보하고 왼쪽 빈자리에 채울 문자 출력
--     RPAD(STR, 자리수, 채울문자) STR을 자리수 만큼 확보하고 왼쪽 빈자리에 채울 문자 출력

SELECT LPAD ('ORACLE', 10, '#') FROM DUAL;
SELECT RPAD ('ORACLE', 10, '#') FROM DUAL;

-- (7) 여백제거
SELECT TRIM('      ORACLE    ')FROM DUAL;
SELECT RTRIM('  ORACLE   ')FROM DUAL;
SELECT LTRIM('  ORACLE   ')FROM DUAL;

-- (8) 대체하기

SELECT REPLACE (ENAME, 'A', 'XX') FROM EMP;
SELECT REPLACE (HIREDATE, '0', '_') FROM EMP;


IV - 3. 날짜 관련 함수 및 예약
-- (1). SYSDATE : 지금
SELECT SYSDATE FROM DUAL;
ALTER SESSION SET NLS_DATE_FORMAT = 'RR/MM/DD DY HH24:MI:SS';

(2) 날짜 계산 : 14일 후
SELECT SYSDATE+14 "반납기한일" FROM DUAL;

(3) MONTHS_BETWEEN (날짜, 날짜) : 두 날짜간의 개월수
  -- EX. 이름, 입사일, 근무월수
SELECT ENAME, HIREDATE, FLOOR(MONTHS_BETWEEN(SYSDATE, HIREDATE))|| '개월' "근무월수" FROM EMP;

(4) ADD_MONTHS(날짜, 개월수) : 특정시점부터 몇개월 후의 날짜.
  -- EX. 이름, 입사일, 수습종료일 (수습기간은 입사일로부터 6개월로 한다.)
SELECT ENAME, HIREDATE, ADD_MONTHS(HIREDATE, 6) "수습종료일" FROM EMP;

(5) LAST_DAY (특정날짜) : 특정날짜 달의 말일을 출력
SELECT LAST_DAY(SYSDATE) FROM DUAL;

(7) NEXT_DAY (날짜, '수') : 특정날짜로부터 처음 도래하는 수요일
SELECT SYSDATE, NEXT_DAY(SYSDATE, '수') FROM DUAL;

IV - 4. 형변환 함수 (문자<>숫자, 문자<>날짜)

(1) TO_CHAR(날짜형데이터, '출력형식')
   -- YYYY(년도 4자리), YY/RR (년도 2자리), MM (월) DD(일) DAY(요일)/DY(요일 요약)
   -- AM/PM (오전/오후) HH12/HH24 (시간) MI(분) SS(초)
   SELECT TO_CHAR(SYSDATE,' YY "년" MM "월"  DD"일  " DY HH24"시"  MI"분" SS"초" ' ) FROM DUAL;  
(2) TO_CHAR(숫자데이터, '출력형식')
  -- 0 : 자릿수, 출력형식의 자릿수가 많으면 0으로 채움
  -- 9 : 자릿수, 출력형식의 자릿수가 많아도 숫자만큼만 입력.
  -- , : 세자리마다, 가능
  -- . : 소수점
  -- $ : 통화단위가 앞에 붙을수 있음
  -- L : 지역통화단위가 앞에 붙음

SELECT TO_CHAR (123456, '9,999,999.99') FROM DUAL;  
SELECT TO_CHAR (123456, '0,000,000.00') FROM DUAL; -- 여기에는 빈자리 0이 자동 출력
SELECT TO_CHAR (10000, 'L999,999') FROM DUAL; -- 시스템에서 국적을 읽어서 통화단위 자동 출력
SELECT ENAME, TO_CHAR (SAL, '$99,999') FROM EMP; -- 달러를 붙임

(3). TO_DATE (문자데이터, '패턴')
SELECT TO_DATE('20220412', 'YYYY-MMDD') FROM DUAL;
  -- EX. 81/5/1 ~83/5/1 사이에 입사한 직원의 모든 필드 (TO_DATE)사용
SELECT * FROM EMP
  WHERE HIREDATE BETWEEN TO_DATE ('810501', 'RRMMDD')AND TO_DATE ('830501', 'RRMMDD');
  
(4). TO_NUMBER (문자, '패턴')  
SELECT '1234'+1 FROM DUAL;
SELECT TO_NUMBER('1,234', '9,999')+1 FROM DUAL;

(5). NVL (NULL 일수도 잇는 데이터, NULL이면 대신할 값) - 매개변수 2개는 타입 일치 해야함.
SELECT ENAME, NVL(COMM, 0) FROM EMP;
 -- EX. 이름, 상사의 사번을 출력하되 상사의 사번이 NULL일 경우 'CEO'로 출력
SELECT ENAME, NVL(TO_CHAR (MGR), 'CEO') FROM EMP;

IV - 6. ETC

-- (1) EXTRACT
SELECT EXTRACT (YEAR FROM SYSDATE) FROM DUAL;
SELECT TO_CHAR (SYSDATE, 'YYYY') FROM DUAL;
SELECT EXTRACT (MONTH FROM HIREDATE) FROM EMP;
SELECT EXTRACT (DAY FROM HIREDATE) FROM EMP;
  --EX. 2월에 입사한 직원의 모든 필드
SELECT * FROM EMP WHERE HIREDATE LIKE '__/02/__';
SELECT * FROM EMP WHERE EXTRACT (MONTH FROM HIREDATE)=2 ;
  -- 81년도에 입사한 직원의 모든 필드
SELECT * FROM EMP WHERE HIREDATE LIKE '81/__/__';
SELECT * FROM EMP WHERE EXTRACT (YEAR FROM HIREDATE)=1981 ;

-- (2) 계층적 출력(레벨별 출력) : LEVEL, START WITH 조건 (MGL IS NULL), 
        CONNECT BY PRIOR 조건 (EMPNO=MGR)

SELECT LEVEL, LPAD(' ', LEVEL*2)||ENAME -- 댓글 대댓글 달때 쓰는 것
  FROM EMP
  START WITH MGR IS NULL
  CONNECT BY PRIOR EMPNO = MGR;
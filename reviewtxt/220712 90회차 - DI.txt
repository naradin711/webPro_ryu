DI를 이용하여 아래와 같은 사칙연산을 시작한다.

먼저 calculator를 먼저 형성한다.

 public void addition (int n1, int n2) {
			System.out.println("더하기");
			System.out.println(n1 + " + " + n1 + " = " + (n1+n1));
		}
		public void subtraction (int n1, int n2) {
			System.out.println("빼기");
			System.out.println(n1 + " - " + n1 + " = " + (n1-n1));
		}
		public void multiplication (int n1, int n2) {
			System.out.println("곱하기");
			System.out.println(n1 + " x " + n1 + " = " + (n1*n1));
		}
		public void division (int n1, int n2) {
			System.out.println("나누기");
			System.out.println(n1 + " / " + n1 + " = " + (n1/n1));
		}

그리고 이를 입력할 클래스를 아래와 같이 만든다.

public void addition (int n1, int n2) {
			System.out.println("더하기");
			System.out.println(n1 + " + " + n1 + " = " + (n1+n1));
		}
		public void subtraction (int n1, int n2) {
			System.out.println("빼기");
			System.out.println(n1 + " - " + n1 + " = " + (n1-n1));
		}
		public void multiplication (int n1, int n2) {
			System.out.println("곱하기");
			System.out.println(n1 + " x " + n1 + " = " + (n1*n1));
		}
		public void division (int n1, int n2) {
			System.out.println("나누기");
			System.out.println(n1 + " / " + n1 + " = " + (n1/n1));
		}

여기서 int값을 지정할 xml을 다음과 같이 지정한다

<bean id="cal" class="com.lec.ch02.ex1_cal.Calculator"/><!-- 객체 생성 -->
	<bean id="myCalculator" class="com.lec.ch02.ex1_cal.MyCalculator">
		<property name="calculator">   
			<ref bean="cal"></ref> <!-- 객체 데이터 타입 (참조 데이터 타입) -->
		</property>
		<property name="num1" value = "50"/>
		<property name="num2" value = "10"/>
	</bean>

이를 잘 읽었는지 확인하기 위해서 Test 페이지를 아래와 같이 구성한다.

	public static void main(String[] args) {
		String resourcelocation = "classpath:applicationCTX001.xml";
		AbstractApplicationContext ctx = new GenericXmlApplicationContext(resourcelocation);
		MyCalculator myCalculator = ctx.getBean("myCalculator", MyCalculator.class);
		myCalculator.add();
		myCalculator.sub();
		myCalculator.multi();
		myCalculator.div();
		ctx.close();
	}

이를 실행한 출력값은 아래와 같다.


15:03:20,684  INFO ext.support.GenericXmlApplicationContext: 456 - Refreshing org.springframework.context.support.GenericXmlApplicationContext@619a5dff: startup date [Tue Jul 12 15:03:20 KST 2022]; root of context hierarchy
15:03:20,700  INFO ctory.support.DefaultListableBeanFactory: 557 - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@34033bd0: defining beans [cal,myCalculator]; root of factory hierarchy
더하기
50 + 50 = 100
빼기
50 - 50 = 0
곱하기
50 x 50 = 2500
나누기
50 / 50 = 1
15:03:20,731  INFO ext.support.GenericXmlApplicationContext:1002 - Closing org.springframework.context.support.GenericXmlApplicationContext@619a5dff: startup date [Tue Jul 12 15:03:20 KST 2022]; root of context hierarchy
15:03:20,731  INFO ctory.support.DefaultListableBeanFactory: 422 - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@34033bd0: defining beans [cal,myCalculator]; root of factory hierarchy


Interface를 이용하여 class를 implement 한 뒤 해당 클래스의 이름만 바꿔서 출력값을 다르게 한다.
우선 폴더 전체를 아우르는 interface를 아래와 같이 생성한다.

public interface Exam {
	public String getName();
	public int total();
	public double avg(); 
	
	}

위 interface를 계승하는 클래스를 아래와 같이 생성한다.

public class ExamImpl implements Exam {
	private String name;
	private int kor;
	private int eng;
	private int mat; 
	public int total() { 
		return kor+eng+mat;
	}

	public double avg() { 
		return total()/3.0;
	} 
}

해당 점수를 출력할 interface와 이를 계승하는 클래스를 아래와 같이 생성한다.

	public interface ExamConsole {
		public void print();
	}

	private Exam exam;
	public void print() { 
		System.out.println("----------------------------------");
		System.out.println("이름 :  " + exam.getName()); 
		System.out.println("----------------------------------");
		System.out.println("총점 :  " + exam.total());
		System.out.printf("평균 : %5.1f", exam.avg());
		System.out.println();
		System.out.println("----------------------------------");
		

	}

이제 외부 폴더 resource에 해당 값을 결정할 xml 파일을 아래와 같이 작성한다.

<bean id="exam" class="com.lec.ch02.ex5_exam.ExamImpl2">
		<property name="name" value="홍길동"/>
		<property name="kor" value="98"/>
		<property name="eng" value="99"/>
		<property name="mat" value="100"/> 
	</bean>
	<bean id="examConsole" class="com.lec.ch02.ex5_exam.ExamConsoleImpl2">
		<constructor-arg ref="exam"/>
	</bean>

이렇게 완성된 값을 출력할 test 페이지를 아래와 같이 구성한 후 결과값을 콘솔창에 출력한다.

public static void main(String[] args) {
		String location = "classpath:applicationCTX005.xml";
		AbstractApplicationContext ctx = new GenericXmlApplicationContext(location);
		ExamConsole console = ctx.getBean("examConsole", ExamConsole.class);
		console.print();
		ctx.close();
	}

----------------------------------
이름 :  홍길동
----------------------------------
총점 :  297
평균 :  74.3
----------------------------------
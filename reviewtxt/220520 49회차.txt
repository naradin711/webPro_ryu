 220520

 jsp에서 <% %>는 스크립트로 처리하는 구간이며
해당 구간은 스크립트로 인식이 되어 웹페이지로 출력할 때 보이지 않는다.

<body>
	<h1>hello world!</h1>
	<%
	int total = 0;
	for (int i =1 ; i <=100 ; i++){
		total += i;
	};
	%>
		<h2>1부터 100까지 누적합은 <%=total %>입니다.</h2>
</body>

위와 같은 jsp파일에서 <% %>를 스크립트 파일로 변환하게 되면

hello world!
1부터 100까지 누적합은 5050입니다.

만 나타나게 된다.

시간을 표현한 JSP파일

<body>
	<%
	Date now = new Date();
	// String format을 통해 date의 출력 형식을 변경
	String str = String.format("%1$TY년 %1$Tm월 %1$Td일 %1$TH시 %1$TM분", now);
	
	Calendar now2 = Calendar.getInstance();
	SimpleDateFormat sdf = new SimpleDateFormat("yy년 MM월 dd일은 좋은날입니다.");
	String str2 = sdf.format(now2.getTime());
	%>
	<%=str%><br>
	<%=str2%>
</body>

Date now = new Date(); 로  시스템에서 오늘 날짜와 시간을 가져오고
String str = String.format("%1$TY년 %1$Tm월 %1$Td일 %1$TH시 %1$TM분", now);을 사용하여
출력 형식을 지정한다.
Calendar now2 = Calendar.getInstance(); Calendar함수로 년 월 일의 값을 가져오고
SimpleDateFormat sdf = new SimpleDateFormat("yy년 MM월 dd일은 좋은날입니다."); 를 통해 출력하는 형식을 가져옵니다.
String str2 = sdf.format(now2.getTime()); str2의 문자열은 now2의 시간값을 받아서 sdf.format으로 출력합니다.

해당 스크립트를 포함한 위 파일을 출력하면 다음과 같습니다.

2022년 05월 19일 14시 55분
22년 05월 19일은 좋은날입니다.


사칙연산하는 JSP파일

<%
	long result = power(2, 3);
	%>
	<p>2의 3승은 <%=result %>입니다.</p>
	<p>9의 11승은 <%=power(3, 11)%>입니다.</p>
	<%!
	// 해당 스크립트는 선언문이라서 가장 먼저 실행되도록 한다.
	private long power(int a, int b){ //a의 b승을 return할 power 함수 선언
		long temp = 1;
		for (int i =1; i<=b ; i++){
			temp*=a;
		};
		return temp;
	};
	%>

위 파일의 출력값은 아래와 같다.

2의 3승은 8입니다.

9의 11승은 177147입니다.


다른 jsp에서 구구단 단수 값을 입력받아
현재 jsp에서 구구단을 출력한다.

먼저 입력받는 단수를 입력할 jsp는 아래와 같다

<body>
	<h1>원하는 단수를 입력하시오.</h1>
	<form action="ex05_guguOut.jsp" method="get">
	<p>단 수 <input type="number" name="su" id="su" size="20" min="2" max="9" required="required">  </p>
	<p><input type="submit" name="sbmit" value="원하는 구구단 출력" ></p>
	</form>
	
</body>

form 태그로 감싼 항목에서 submit버튼을 누르면 "ex05_guguOut.jsp"라는 출력 페이지로 form안에 있는 값을 전달한다.


다음으로 입력받은 단수를 출력할 jsp는 아래와 같다.

<body>
	<%
	int su = Integer.parseInt(request.getParameter("su"));
	%>
	<h3>전달 받은 파라미터 su값은 <%=su %></h3>

	<table>

	<caption> <%=su %>단 구구단</caption>

	<%for(int i=1 ; i<=9; i++){%>

		<tr><td><%=su %>*<%=i%> = <%=su*i%></tr> </td>
	
		<%}%>
	
	</table>
</body>


먼저 int su를 가져와야 하는데 parameter에 입력한 숫자값은 반드시 출력이나 전달시 String값으로 전달된다.
따라서 int su의 값을 전에서 받아오기 위해서 request.getParameter("su")로 전 페이지에서 숫자값을 받아
 Integer.parseInt 함수를 통해 해당 문자열을 다시 숫자값으로 인식시킨다.
<%=su %>를 통해 입력받은 숫자값을 해당 페이지에서 출력하며
입력받은 숫자값의 단수에 해당하는 구구단을 출력하기 위한 표와 for구문에서 
표를 구성하는 <tr><td>에는 <%%>를 씌우지 않아 스크립트화 되어 에러가 나는 것을 방지한다.
해당 페이지는 단독으로 먼저 실행할 경우 su값이 입력되지 않아 페이지 전체가 에러가 나서 출력이 되지 않는다.

전 페이지에서 3을 입력하였을때 출력값은 아래와 같다.

전달 받은 파라미터 su값은 3

3단 구구단

3*1 = 3
3*2 = 6
3*3 = 9
3*4 = 12
3*5 = 15
3*6 = 18
3*7 = 21
3*8 = 24
3*9 = 27

로그인 화면

로그인 정보를 받는 html은 아래와 같다.

<body>
		<form action="ex07_loginpro.jsp" method="post">
		<table>
		<tr>
		<td>이  름</td>
		<td><input type="text" name="name" class="txt"></td>
		</tr>
		<tr>
		<td>아이디</td>
		<td><input type="text" name="id" class="txt"></td>
		</tr>
		<tr>
		<td>패스워드</td>
		<td><input type="password" name="pw" class="txt"></td>
		</tr>
		</table>
		<br>
		<center><input type="submit" name="login" value="로그인"/></center>
		
		</form>		
</body>

여기서 전달하는 method를 post로 바꿔서 전달받는 페이지 url에 불필요한 파라미터 정보를 받지 않게 한다.

로그인 출력 화면은 다음과 같다

<body>
	<%! String name1, id1, pw1 ; %>
	<%
	//post방식으로 들어와서 파라미터 전송시 깨질 수 있기에 해당 문자열을 UTF-8로 인코딩해준다
	 
	request.setCharacterEncoding("utf-8"); 
	name1 = request.getParameter("name");
	 id1 = request.getParameter("id");
	 pw1 = request.getParameter("pw");
	%>
	
	<p>
	아이디는 <%=id1 %> 이고 <br>
	패스워드는 <%=pw1 %> 입니다. <br>
	<%=name1 %>님 반갑습니다.
	</p>
</body>

여기서 한글을 받게 되면 주고 받는 과정에서 인코딩이 깨지기 때문에
입력값을 받기 이전에 request.setCharacterEncoding("utf-8"); 를 사용하여 받는 모든 문자열을 인코딩해준다.
출력된 입력값은 아래와 같다.

http://localhost:8090/ch02_semiJSP/ex07_loginpro.jsp = 불필요한 정보 생략한 url

아이디는 dasdfasf 이고
패스워드는 ddd32333 입니다.
홍길동님 반갑습니다.
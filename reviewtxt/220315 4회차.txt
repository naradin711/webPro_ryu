220315

배열이란? 동일 자료형의 집합. 하나의 이름으로 여러개의 데이터를 사용할 수 있음.
   - 하나의 데이터만 가지고 있던 변수(주머니)와 달리 여러 개의 데이터를 저장한 곳의 주소를 가리킴
   - 즉, 여러 개의 변수를 모아 놓은 또 하나의 변수

배열의 문법(배열의 선언와 생성)
   - 변수 선언과 거의 비슷하며, 여러 개의 데이터가 모여 있어 ‘{ }’를 이용 한다.
   - 배열의 크기는 최초에 한번 설정되면 변경이 불가 하다.
   - 배열을 객체로 취급.
   - 배열선언 → 배열의 메모리 할당(배열 생성) → 배열이용

레퍼런스의 이해
   - 배열은 배열을 구성하고 있는 데이터들의 주소값을 가지고 있다고 하였다.
   - 이때 주소값을 '레퍼런스'라고 한다.
   - 만약 동일한 주소값을 가지고 있다면, 같은 데이터를 가리키고 있다고 볼 수 있다.

다차원 배열
   - 배열이 가리키는 데이터에 또 다른 배열이 들어있는 구조 (배열 안에 배열이 들어있다고 인식)

객체지향 이전의 프로그래밍 - <절차지향> 위에서 살펴본 프로그래밍 방식이 절차지향 언어 = 위에서부터 순차적으로 실행

메소드의 이해 - 메소드란? 작업을 수행하기 위한 명령문의 집합
어떤 값을 입력받아서 처리하고 그 결과를 돌려준다.
메소드의 장점과 작성지침 ; 반복적으로 수행되는 여러 문장을 메소드로 작성한다.
함수가 같아도 매개변수의 숫자에 따라 같은 함수를 돌려쓸 수 있는데 이를 함수의 오버로딩이라고 한다.
접근제한자 [static] 리턴type 메소드명([매개변수1, 매개변수2,..]){ 
             //return이 없을 경우 리턴type은 void
	처리할 프로세스들
	[return 리턴값;]
              }
  





220321

상속을 하는 이유

1. 부모단에 있는 함수, 변수를 계승하여 편리하게 이용하기 위해서
2. 객체의 타입을 일치시키기 위해서

오버로딩 (함수 중복정의) = 같은 형태의 함수에 매개변수 달리하여 사용가능하다.
오버라이드(함수의 재정의) = 상속받은 함수의 매개변수, 리턴타입 동일.

this. : 내 객체가 갖고 있는 변수
this() : 내 객체 클래스의 생성자

super. : 내 부모 클래스의 변수
super() : 내 부모 클래스의 생성자.

super란? super는 부모클래스에서 메소드, 객체변수를 찾는 키워드

    ⑴ 하위 클래스에 의해 가려진 상위클래스의 멤버변수나 메소드에 접근할 때
        super.객체변수
        super.메소드이름(매개변수)
    ⑵ 상위클래스의 생성자를 호출할 때
        super(매개변수) ; 이 super(매개변수)문장은 반드시 첫 번째 라인에 와야 한다.
        super() ; 매개변수 없는 슈퍼클래스의 생성자 호출

 상속 시 final의 쓰임새

- final class 클래스명 {} 상속불가
- final void 메서드명(){} 오버라이딩 금지
- final (매개변수) 이후에 수정 금지
 220530

Oracle과 연동하여 Eclipse에서 DB를 연동하고 서버인 Tomcat을 통해 웹페이지에 게시하는 방법

<%
	String driver 	= "oracle.jdbc.driver.OracleDriver";
	String url 		= "jdbc:oracle:thin:@localhost:1521:xe";
	String uid 		= "scott";
	String upw 		= "tiger";
%>

먼저 위와 같이 오라클 드라이버의 형식과 위치 해당 db에 접속하기 위해 필요한 id와 pw를 입력한다.

		Connection conn = null;
		Statement  stmt = null;
		ResultSet  rs  	= null;
		String sql ="SELECT * FROM EMP";

위처럼 db와 eclipse를 이어주는 객체를 초기화 시키며 db에서 행하고자 하는 sql문을 지정한다.

try{
			Class.forName(driver); // 1단계 : 드라이버 로드
			conn = DriverManager.getConnection(url, uid, upw); // 2단계 : DB연결객체
			stmt = conn.createStatement(); // 3단계 : SQL전송객체
			rs   = stmt.executeQuery(sql); // 4단계 : SQL전송 + 5단계 (전송결과 받기)
			if (rs.next()) {			   // 6단계 : 결과를 이용해서 적당한 로직 수행
				out.println("<tr><th>사번</th><th>이름</th><th>직책</th><th>상사 사번</th><th>입사일</th>");
				out.println("<th>급여</th><th>상여</th><th>부서번호</th></tr>");
				
			    do {
					int empno		  	= rs.getInt("empno");
					String ename	 	= rs.getString("ename");
					String job	   		= rs.getString("job");
					int mgr				= rs.getInt("mgr");
					Date hiredate		= rs.getDate("hiredate");
					int sal 			= rs.getInt("sal");
					int comm 			= rs.getInt("comm");
					int deptno 			= rs.getInt("deptno");
					out.println("<tr><td>"+empno+"</td><td>"+ename+"</td><td>"+job+"</td>");
					out.println("<td>"+mgr+"</td><td>"+hiredate+"</td><td>"+sal+"</td>");
					out.println("<td>"+comm+"</td><td>"+deptno+"</td></tr>");
				}while (rs.next());
			}else {
				out.println("<tr><td>입력된 데이터가 없습니다.</td></tr>");
			}
		}catch(Exception e) {
			System.out.println(e.getMessage());
		}finally {
			try {
				if(rs!=null)   rs.close();
				if(stmt!=null) stmt.close();
				if(conn!=null) conn.close();
			}catch (Exception e) {
				System.out.println(e.getMessage());
			}
		}
	%>

<%%>를 통해 JSP 페이지안에 위와 같은 JAVA코드를 삽입하며 그 출력 값은 아래와 같다.


사번	이름	직책		상사 사번	입사일		급여	상여	부서번호
7369	SMITH	CLERK		7902	1980-12-17	800	0	20
7499	ALLEN	SALESMAN	7698	1981-02-20	1600	300	30
7521	WARD	SALESMAN	7698	1981-02-22	1250	500	30
7566	JONES	MANAGER	7839	1981-04-02	2975	0	20
7654	MARTIN	SALESMAN	7698	1981-09-28	1250	1400	30
7698	BLAKE	MANAGER	7839	1981-05-01	2850	0	30
7782	CLARK	MANAGER	7839	1981-06-09	2450	0	10
7788	SCOTT	ANALYST		7566	1982-12-09	3000	0	20
7839	KING	PRESIDENT	0	1981-11-17	5000	0	10
7844	TURNER	SALESMAN	7698	1981-09-08	1500	0	30
7876	ADAMS	CLERK		7788	1983-01-12	1100	0	20
7900	JAMES	CLERK		7698	1981-12-03	950	0	30
7902	FORD	ANALYST		7566	1981-12-03	3000	0	20
7934	MILLER	CLERK		7782	1982-01-23	1300	0	10 

로 출력이 가능하다.



dto dao 파일을 만들어서 원하는 자료값을 추출한다.

먼저 dto를 만든다

	private int 	empno;
	private String 	ename;
	private String 	job;
	private int 	mgr;
	private Date 	hiredate;
	private int 	sal;
	private int 	comm;
	private int 	deptno; 

db에서 쓰이는 변수를 private로 넣고

	public EmpDTO() { }

	public EmpDTO(int empno, String ename, String job, int mgr, Date hiredate, int sal, int comm, int deptno) {
		super();
		this.empno = empno;
		this.ename = ename;
		this.job = job;
		this.mgr = mgr;
		this.hiredate = hiredate;
		this.sal = sal;
		this.comm = comm;
		this.deptno = deptno;
	}

를 통해 함수를 만들고

public int getEmpno() {
		return empno;
	}

	public void setEmpno(int empno) {
		this.empno = empno;
	}

	public String getEname() {
		return ename;
	}

	public void setEname(String ename) {
		this.ename = ename;
	}

	public String getJob() {
		return job;
	}

	public void setJob(String job) {
		this.job = job;
	}

	public int getMgr() {
		return mgr;
	}

	public void setMgr(int mgr) {
		this.mgr = mgr;
	}

	public Date getHiredate() {
		return hiredate;
	}

	public void setHiredate(Date hiredate) {
		this.hiredate = hiredate;
	}

	public int getSal() {
		return sal;
	}

	public void setSal(int sal) {
		this.sal = sal;
	}

	public int getComm() {
		return comm;
	}

	public void setComm(int comm) {
		this.comm = comm;
	}

	public int getDeptno() {
		return deptno;
	}

	public void setDeptno(int deptno) {
		this.deptno = deptno;
	}

위와 같이 각 개체값의 getter 와 setter를 구한다.

다음으로 DAO를 구한다.

public class EmpDAO { //싱글톤  DAO
	private String driver	= "oracle.jdbc.driver.OracleDriver";
	private String url 		= "jdbc:oracle:thin:@localhost:1521:xe";
	private static EmpDAO instance; // 자기가 자기의 클래스의 객체를 참조하는 변수 = 초기값 설정
	public static EmpDAO getInstance() {
		if(instance==null) {
			instance = new EmpDAO();
		}
		return instance; // instance가 존재할 시 계속 같은 클래스 반복
	}
	private EmpDAO () {
		try {
			
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
	}

먼저 연동할 DB의 Oracle의 형식과 주소를 입력한 후

private static EmpDAO instance; // 자기가 자기의 클래스의 객체를 참조하는 변수 = 초기값 설정

instance 변수를 설정하고


	public static EmpDAO getInstance() {
		if(instance==null) {
			instance = new EmpDAO();
		}
		return instance; // instance가 존재할 시 계속 같은 클래스 반복
	} 

instance 변수를 처음 만들면 새로운 DAO를 생성하도록 도와준다.

searchName을 매개변수로 받아서 EmpDTO를 return하는 DAO 형식은 아래와 같다.

	public ArrayList<EmpDTO> selectSearchName (String searchName) {
		ArrayList<EmpDTO> dtos = new ArrayList<EmpDTO>();
		// 2단계~7단계
		Connection conn 		= null;
		PreparedStatement pstmt = null;
		ResultSet rs			= null;
		String sql = "SELECT * FROM EMP WHERE ENAME LIKE '%'||UPPER( ? )||'%'";
		try {
			conn = DriverManager.getConnection(url, "scott", "tiger");
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, searchName);
			rs = pstmt.executeQuery();
			while(rs.next()) { // dto에서 매개값 받기
				int empno		= rs.getInt("empno");
				String ename  	= rs.getString("ename");
				String job		= rs.getString("job");
				int mgr     	= rs.getInt("mgr");
				Date hiredate	= rs.getDate("hiredate");
				int sal 		= rs.getInt("sal");
				int comm		= rs.getInt("comm");
				int deptno		= rs.getInt("deptno"); 
				dtos.add(new EmpDTO(empno, ename, job, mgr, hiredate, sal, comm, deptno));
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		} finally {
			try {
				if(rs!=null) 	rs.close();
				if(pstmt!=null) pstmt.close();
				if(conn!=null) 	conn.close();
			} catch (Exception e) {
				System.out.println(e.getMessage());
			}
		}
		
		return dtos;
	}

해당 dao를 적용하기 위해 입력값을 받을 jsp는 아래와 같다.

<body>
	<form action="ex03_deptnoOut.jsp">
		부서번호  <select name="deptno">
				<option value="0"> </option>
				<%
					Connection conn = null;
					Statement stmt  = null;
					ResultSet rs	= null;
					String driver 	= "oracle.jdbc.driver.OracleDriver";
					String url 		= "jdbc:oracle:thin:@localhost:1521:xe";
					String uid 		= "scott";
					String upw 		= "tiger";
					String sql 		= "SELECT * FROM DEPT";
					try {
						Class.forName(driver); // 1단계
						conn 	= DriverManager.getConnection(url, uid, upw); // 2단계
						stmt	= conn.createStatement();
						rs		= stmt.executeQuery(sql);
						while(rs.next()){
							int deptno = rs.getInt("deptno");
							String dname = rs.getString("dname");
							out.println("<option value='"+deptno+"'>"+deptno+" - "+dname+"</option>");
						}					
					}catch (Exception e) {
						out.println(e.getMessage());
					}finally {
						try {
							if(rs!=null) rs.close();
							if(stmt!=null) stmt.close();
							if(conn!=null) conn.close();
						}catch (Exception e) {
							out.println(e.getMessage());
						}
						
					}
				%> 
		</select>
		<input type="submit" value="검색" size="70">
	</form>
</body>

그리고 위 jsp에서 받은 입력값을 db로 전송할 jsp는 아래와 같다.

<body>
<% 
	int deptno = Integer.parseInt(request.getParameter("deptno"));
	EmpDAO dao = EmpDAO.getInstance();
	ArrayList<EmpDTO> dtos = dao.selectDeptno(deptno);
	out.println("<table>");
	if(!dtos.isEmpty()){ // dtos에 데이터가 있는 경우
		for(EmpDTO dto : dtos) {
			out.println("<tr> <td>"+dto.getEmpno()+"</td>  <td>"+dto.getEname()+"</td>  <td>"+dto.getEname()+"</td>  <td>"+dto.getHiredate()+"</td>  <td>"+dto.getDeptno()+"</td> </tr>");
		}	
	}else {				// dtos에 데이터가 없는 경우
		out.println("<tr><td>찾으시는 부서 번호에 해당하는 사원이 없습니다.</td></tr>");
	}
	out.println("</table>");
%>
<p><button onclick="location.href='ex03_deptnoIn.jsp'">다시 검색</button></p>
</body>

먼저 int deptno = Integer.parseInt(request.getParameter("deptno")); 를 통해 이전 페이지에서 부서번호 값을 받고
 EmpDAO dao = EmpDAO.getInstance(); 를 통해 DAO를 생성한다.
해당 DAO를 출력할 DTO를 ArrayList<EmpDTO> dtos = dao.selectDeptno(deptno);로 정해주고 
out.println("<tr> <td>"+dto.getEmpno()+"</td>  <td>"+dto.getEname()+"</td>  
<td>"+dto.getEname()+"</td>  <td>"+dto.getHiredate()+"</td>  <td>"+
dto.getDeptno()+"</td> </tr>"); 를 통하여 원하는 값을 출력한다.
		

위 dao를 적용한 jsp들을 실행하면 실행값은 아래와 같다.

7499	ALLEN	ALLEN	1981-02-20	30
7521	WARD	WARD	1981-02-22	30
7654	MARTIN	MARTIN	1981-09-28	30
7698	BLAKE	BLAKE	1981-05-01	30
7844	TURNER	TURNER	1981-09-08	30
7900	JAMES	JAMES	1981-12-03	30
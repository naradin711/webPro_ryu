220311 2회차 수업

변수를 배열하는 방식

      1. 자료형 변수명; - 변수선언과 할당을 분리
      int num1; // 변수 선언
      num1 = 10; // 변수에 수치를 할당
      2. 자료형 변수명 = 초기값 ; - 변수선언과 할당을 동시에 (초기화)
      int num2 = 20;
       3. 자료형 변수명 1, 변수명 2, ... 변수명 n; - 동일 자료형 변수 다수 선언
      int num3, num4;
      num3 = 30;  num4=40;
      4. 자료형 변수명=값1, 변수명2=값2 ... 변수명n=값n; 동일자료형 변수를 다수 선언과 초기화
      int num5=50, num6=60, num7;
      num7=70;

형변환의 종류

      int i1 = 10;                 // 4byte
      long l = 2200000000L;   // 8byte
     double d1 = i1;             // 8byte = 4byte (묵시적인 형변환 = 작은 바이트 값을 큰 바이트 공간에)
      double d2 = 10.19; //8byte
      int i2 = (int)d2;      //4byte 명시적인 형변환 = 데이터 손실이 발생할 수 있음.
   
연산자(operator) = 
일정한 규칙을 가지고 계산하는 것으로 우리가 일상생활에서 사용하고 있는 
덧셈, 뺄셈, 곱셈, 나눗셈을 비롯하여 프로그램에서는 자동증감, 동등비교, 비트 연산 등 많은 연산자가 있다.

연산의 종류

1. 산술연산자 = 사칙연산 및 나머지 연산
 나머지 연산의 용도 = 짝수/홀수 판별, 배수 판별 용도
                            모든 정수에 나머지 연산자 2를 적용할 때, 값이 0이면 짝수, 1이면 홀수.
cf) if ( (n1%2) == 0)
    System.out.printf("n1은 짝수입니다.");
    else 
        System.out.printf("n1은 홀수입니다.");

2. 증감연산자 : ++, -- : 특정 변수에 수치를 증가시키거나 감소시킬 때 사용.

3. 동등비교, 관계연산자 : ==(같다)  !=(다르다)  <  <=  >  >= : 두 개 이상의 변수가 서로 같거나 다름을 나타낼 때 활용.

4. 논리연산자 : &&(AND), ||(OR) : 연산자의 좌항의 조건에 따라 우항의 실행 조건을 결정할 때 활용
cf) int i=1, j=10, h=10;
     System.out.println("(i>j) && (++j>h) : "+((i>j) && (++j>h)));
     연산자의 좌항이 false 일 경우 우항은 실행하지 않음.

5. 삼항 연산자 : 조건식에 따라 값이나 식을 분기하는 연산자.
cf) int h = 100;
    String result = ( (h%2)==0) ? "짝수" : "홀수";
    System.out.println("삼항연산결과 h는" + result); h=100이므로 짝수.

6. 대입 연산자 : 자기 자신에 연산한 후의 결과값을 바로 대입할 수 있는 연산자.
cf) n1 +=10; n1에 10을 증가시키는 코드 n1*=3; n1 변수의 값에 3을 곱하는 코드.
    

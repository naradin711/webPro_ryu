DROP TABLE CUS_LEVEL; -- 테이블 삭제 -- 참조 테이블이 있을 경우 삭제 불가
DROP TABLE CUSTOMER; -- 테이블 삭제 (참조 상관없이 강제 삭제)

CREATE TABLE CUS_LEVEL(
        LEVELNO NUMBER(10) PRIMARY KEY,
        LevelName VARCHAR2(30),
        LOW NUMBER(10),
        HIGH NUMBER(10)
        );
INSERT INTO cus_level VALUES (1, 'BRONZE', 0, 50000);
INSERT INTO cus_level VALUES (2, 'SILVER', 50001, 100000);
INSERT INTO cus_level VALUES (3, 'GOLD', 100001, 500000);
INSERT INTO cus_level VALUES (4, 'VIP', 500001, 1000000);

 SELECT * FROM CUS_LEVEL;

 SELECT C.LEVELNO FROM CUS_LEVEL L, CUSTOMER C WHERE l.levelno = c.levelno AND CAMOUNT BETWEEN L.LOW AND L.HIGH;
CREATE TABLE CUSTOMER(
        CID     NUMBER(10)      PRIMARY KEY,
        CTEL    VARCHAR2(30)    NOT NULL,
        CNAME   VARCHAR2(30)    NOT NULL,
        CPOINT  NUMBER(10)      DEFAULT 1000,
        CAMOUNT NUMBER(10)      DEFAULT 0,
        LEVELNO NUMBER(10)      DEFAULT 1 REFERENCES CUS_LEVEL(LEVELNO) 
        );
INSERT INTO CUSTOMER VALUES 
    (CUSTOMER_SEQ.NEXTVAL, '010-1111-1111', '홍길동', 2000, 7000, 1);  
INSERT INTO CUSTOMER VALUES 
    (CUSTOMER_SEQ.NEXTVAL, '010-2222-2222', '대길동', 3000, 9000, 1);
INSERT INTO CUSTOMER VALUES 
    (CUSTOMER_SEQ.NEXTVAL, '010-1111-3333', '태길동', 6000, 18000, 2);
    
SELECT * FROM CUSTOMER;



COMMIT;
-- 0. 레벨이름을 검색 : Vector<String> getLevelNames();
SELECT LEVELNAME FROM CUS_LEVEL;

-- 1. 아이디 검색 (”다음 level이 업그레이드되기 위해 쓸 돈”)
-- Public CustomerDto cidGetCustomer(int CID);

SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME,
    (SELECT HIGH-CAMOUNT FROM CUSTOMER WHERE CID = C.CID AND LEVELNO!=5) FORLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO = L.LEVELNO AND CID = 1;
    
ROLLBACK;    

-- 2. 폰4자리(FULL)검색 ArrayList<CustomerDao> getCtelSearch

SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME,
    (SELECT HIGH-CAMOUNT FROM CUSTOMER WHERE CID = C.CID AND LEVELNO!=5) FORLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO = L.LEVELNO AND CTEL LIKE ('%'||'9999')
    ORDER BY CAMOUNT DESC;

    
-- 3. 고객이름 검색
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME,
    (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID = C.CID AND LEVELNO!=5) FORLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO = L.LEVELNO AND CNAME = '장길동'
    ORDER BY CAMOUNT DESC;

--4. 포인트로만 구매 int buyWithPoint(int CID, int cpoint)
UPDATE CUSTOMER SET CPOINT = CPOINT-500 WHERE CID = 1;

--5. 물품구매 int buy(int CID, int CAMOUNT)
-- 물품구매 업데이트에는 CPOINT, CAMOUNT, LEVELNO
-- 5-1 누적금액이랑 포인트 변경
UPDATE CUSTOMER SET CPOINT = CPOINT + (60000*0.05),
                    CAMOUNT = CAMOUNT +60000                     
                    WHERE CID = 6;
-- 5-2. LEVELNO 변경하기 전 현레벨 번호와 수정될 레벨 번호  
    SELECT CID. CNAME, C.LEVELNO 현레벨, L.LEVELNO 바뀐레벨
           FROM CUSTOMER C, CUS_LEVEL L
           WHERE CAMOUNT BETWEEN LOW AND HIGH;
-- 5-3. 레벨번호를 수정!
UPDATE CUSTOMER SET LEVELNO = (SELECT L.LEVELNO FROM CUSTOMER C, CUS_LEVEL L
                            WHERE CAMOUNT BETWEEN LOW AND HIGH);             

 -- 5-4. 5-1과 5-3을 합쳐서 완성시키기                   
UPDATE CUSTOMER SET CPOINT = CPOINT + (60000*0.05),
                    CAMOUNT = CAMOUNT +60000,
                    LEVELNO = (SELECT L.LEVELNO FROM CUSTOMER C, CUS_LEVEL L
                            WHERE CAMOUNT+60000 BETWEEN LOW AND HIGH AND CID=6)
                            -- CAMOUNT에 변경값을 넣어 변수를 창출!
                    WHERE CID =6; 
                    
SELECT * FROM CUSTOMER;
    
    
--6. 등급별 출력 ArrayList<CustomerDto> levelNameGetCustomer(String levelName);
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME,
    (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID = C.CID AND LEVELNO!=5) FORLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO AND LEVELNAME = 'SILVER';
SELECT * FROM CUSTOMER;
    
    
--7. 전체 출력 Arraylist<CustomerDto> getCustomers();
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME,
    (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID = C.CID AND LEVELNO!=5) FORLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO = L.LEVELNO  
    ORDER BY CAMOUNT DESC;


--8. 회원가입 int insertCustomer (Customer dto) int insertCustomer (String cTel, String cName)

INSERT INTO CUSTOMER (CID, CTEL, CNAME) VALUES
            (CUSTOMER_SEQ.NEXTVAL, '010-2222-7777', '장길동');


--9. 번호수정 int updateCustomer (int CID, String cName)

UPDATE CUSTOMER SET CTEL = '010-8888-9999' WHERE CID=6 ;


--10. 회원탈퇴 int deleteCustomer (String cTel)

DELETE CUSTOMER WHERE CTEL = '010-8888-9999';

COMMIT;


SELECT * FROM EMP;

SELECT * FROM SALGRADE;






-- [X] VIEW , INLINE VIEW, TOP N 구문
-- 10.1 VIEW : 가상의 테이블 (1) 단순위 (2) 복합행
-- 10.1.(1) 단순뷰 : 하나의 테이블로 구성한 VIEW
-- EMPV0이라는 가상의 VIEW를 생성 또는 수정 = EMP 테이블 일부를 갖는 가상의 테이블
SELECT * FROM USER_VIEWS; -- 데이터 딕셔너리 VIEW 확인
CREATE OR REPLACE VIEW EMPV0 
       AS SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, DEPTNO FROM EMP; -- VIEW EMPV0 생성하기
       -- DDL을 수행하면 데이터 딕셔너리 자동 수정 
SELECT * FROM EMPV0;
INSERT INTO EMPV0 VALUES (1111, '홍', 'ITMANAGER', 7369, SYSDATE, 40); -- 지금 들어온 칼럼. 뷰에 인설트
SELECT * FROM EMPV0;
SELECT * FROM EMP; -- VIEW에 인서트하면 본 문서에서도 알아본다.

UPDATE EMPV0 SET JOB = 'MANAGER' WHERE EMPNO = 1111; -- VIEWR가 UPDATE하면 EMP테이블도 업데이트
SELECT * FROM EMPV0;
SELECT * FROM EMP;

DELETE FROM EMPV0 WHERE EMPNO = 1111; -- VIEW 지우면 테이블 VIEW도 지워진다.

-- EMPV0이라는 VIEW 생성 : EMP테이블의 30번 부서행만.

CREATE OR REPLACE VIEW EMPV0
       AS SELECT * FROM EMP WHERE DEPTNO=30;

DESC EMPV0;
SELECT * FROM EMPV0;

INSERT INTO EMPV0 VALUES (1111, '홍', NULL, NULL, SYSDATE, 9000, 9000, 30);
SELECT * FROM EMPV0;
SELECT * FROM EMP;


-- 40번 부서 입력은 가능하나 VIEW에서는 보이지 않음.
INSERT INTO EMPV0 VALUES (1112, '박', NULL, NULL, SYSDATE, 8000, 8000, 40);

SELECT * FROM EMPV0;
SELECT * FROM EMP;
DELETE FROM EMPV0 WHERE EMPNO IN (1111,1112);

SELECT * FROM EMPV0;
SELECT * FROM EMP;

DELETE FROM EMP WHERE DEPTNO =40; -- 40번 부서는 EMP에서 삭제

SELECT * FROM EMPV0;
SELECT * FROM EMP; 

-- EMPV0 VIEW 생성 : ENAME, JOB, HIREDATE만으로 VIEW를 생성하기
-- NOT NULL이나 PRIMARY KEY가 되는 필드를 미포함하면 INSERT 불가.
CREATE OR REPLACE VIEW EMPV0
       AS SELECT ENAME, JOB, HIREDATE FROM EMP;
       
INSERT INTO EMPV0 VALUES ('홍', 'SALESMAN', SYSDATE);       
COMMIT;

-- VIEW의 제한 조건 (1)VIEW의 조건 (2) 읽기전용
-- WITH CHECK OPTION을 설정한 VIEW는 VIEW 조건에 해당하는 데이터만 삽입, 수정, 삭제 가능
-- WITH READ ONLY를 설정한  VIEW는 읽기 전용 VIEW

-- EMPv0 : EMP 테이블에서 30번 부서만 빼오기
CREATE OR REPLACE VIEW EMPv0
       AS SELECT * FROM EMP WHERE DEPTNO = 30
       WITH CHECK OPTION;

INSERT INTO EMPv0 VALUES (1111, '홍', NULL, NULL, SYSDATE, 9000, 9000, 30);
INSERT INTO EMPv0 VALUES (1112, '박', NULL, NULL, SYSDATE, 3000, 3000, 40); -- WHERE 조건에 부합하지 않으면 INSERT 불가능
SELECT * FROM EMP;
DELETE FROM EMPv0 WHERE ENAME = 'SMITH'; -- 20번 부서 SMITH DELETE는 안됨.
DELETE FROM EMPv0 WHERE EMPNO = 1111; -- 30번 부서 홍 DELETE
SELECT * FROM EMP;

-- EMPv0 읽기 전용 VIEW

CREATE OR REPLACE VIEW EMPv0
       AS SELECT EMPNO, ENAME, JOB, MGR, DEPTNO FROM EMP
       WITH READ ONLY;
       
INSERT INTO EMPv0 VALUES (1111, '홍', NULL, NULL, 30);     -- 읽기 전용은 INSERT 불가.  


-- 10.1.(2) 복합VIEW : 2개 이상의 테이블로 구성한 VIEW이거나 가상의 필드로 VIEW를 만들 경우
--                    DML문을 제한적으로 사용 가능함.

CREATE OR REPLACE VIEW EMPV0
       AS SELECT EMPNO, ENAME, JOB, DNAME, LOC
       FROM EMP E, DEPT D
       WHERE E.DEPTNO = D.DEPTNO;

SELECT * FROM EMPV0;       

INSERT INTO EMPV0 VALUES (1111, 'HONG', 'MANAGER', 'RESEARCH', 'DALLAS'); -- 복합 VIEW는 INSERT, UPDATE 불가! 

-- 가상의 필드로 VIEW : COULMN에 ALIAS(영문자로 시작, 영문자, 숫자)를 이용하여 VIEW 생성
CREATE OR REPLACE VIEW EMPV0
       AS SELECT EMPNO, ENAME, SAL*12 "YEALYSAL" FROM EMP WHERE DEPTNO = 10; -- 필드에 함수나 특수문자가 있으면 ALIAS를 생성하여 칼럼을 인식시킨다.

CREATE OR REPLACE VIEW EMPV0(EMPNO, ENAME, YEALYSAL)
       AS SELECT EMPNO, ENAME, SAL*12 FROM EMP WHERE DEPTNO = 20; -- 별칭들만 따로 나열시킴

SELECT * FROM EMPV0;

-- EX. 부서번호, 최소급여, 최대급여, 부서평균급여를 포함한 VIEW DEPTV1을 생성하시오

CREATE OR REPLACE VIEW DEPTV1
       AS SELECT E.DEPTNO, MIN(SAL) "MINSAL", MAX(SAL)"MAXSAL", ROUND(AVG(SAL)) "AVGSAL"
       FROM EMP E, DEPT D
       WHERE E.DEPTNO = D.DEPTNO
       GROUP BY E.DEPTNO;

SELECT * FROM DEPTV1;

--EX. 직책, 부서를 포함한 EMPV0 VIEW를 생성

CREATE OR REPLACE VIEW EMPV0
       AS SELECT DISTINCT JOB, DEPTNO FROM EMP ORDER BY DEPTNO; -- DISTINCT 포함하면 INSERT 불가

SELECT * FROM  EMPV0;

-- 10. 2. INLINE VIEW : FROM절 상의 서브쿼리를 INLINE VIEW라고 하며, FROM절에 오는 서브퀘리는 VIEW처럼 적용
-- EX. 급여가 2000을 초과하는 사원의 평균 급여.
SELECT AVG(SAL) FROM EMP WHERE SAL > 2000;
SELECT AVG(SAL) FROM (SELECT SAL FROM EMP WHERE SAL> 2000); -- 여기서 FROM 이하 SELECT 절은 INLINE VIEW 

-- 24. 부서 평균 월급보다 높은 사원을 사번, 이름, 급여, (서브쿼리 연습문제 24, 25)
SELECT ROUND(AVG(SAL)),DEPTNO FROM EMP GROUP BY DEPTNO;
SELECT EMPNO, ENAME, SAL FROM EMP E
WHERE SAL > (SELECT AVG(SAL) FROM EMP WHERE DEPTNO = E.DEPTNO)
ORDER BY DEPTNO;
SELECT DISTINCT E1.EMPNO, E1.ENAME, E1.SAL, E1.DEPTNO FROM EMP E1, EMP E2
WHERE  E1.DEPTNO = E2.DEPTNO
   AND E1.SAL > (SELECT AVG(E1.SAL) FROM EMP E1 WHERE E1.DEPTNO = E2.DEPTNO)
ORDER BY E1.SAL;
SELECT EMPNO, ENAME, SAL
  FROM EMP E, (SELECT DEPTNO, AVG(SAL)"AVG" FROM EMP GROUP BY DEPTNO) A
  WHERE E.DEPTNO = A.DEPTNO
  AND SAL > AVG 
  ORDER BY SAL; --INLINE VIEW 이용

























































































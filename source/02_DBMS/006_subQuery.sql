--[VI] SUB QUERY : QUERY안에 QUERY가 내포되어 있음.
-- SELECT FIELD 1 (SELECT FIELD 2 FROM TABLE WHERE 조건)
-- FROM TABLE 
-- WHERE 조건 (SELECT FIELD 2 FROM TABLE WHERE 조건)

-- ** 1. 서브 쿼리 개념(필요성)
-- 서브쿼리의 필요성 : 
-- 급여를 제일 많이 받는 사람의 사번, 이름, 직책과 급여
SELECT MAX(SAL) FROM EMP;
SELECT EMPNO, ENAME, MAX(SAL) FROM EMP GROUP BY EMPNO;
SELECT MAX(SAL) FROM EMP; -- SUB
SELECT EMPNO, ENAME, JOB, SAL -- MAIN
  FROM EMP
  WHERE SAL = (SELECT MAX(SAL) FROM EMP);
  
-- 서브퀘리는 반드시 괄호로 묶여 있어야 합니다.  

-- 서브쿼리의 종류 (1) 단일행 서브쿼리 - 서브쿼리실행 결과가 단일행일때 : =, >, <, >=, != 연산자 사용가능
  -- EX. SCOTT이 근무하는 부서 이름 출력.
SELECT DEPTNO FROM EMP WHERE ENAME = 'SCOTT'; -- SUB

SELECT DNAME FROM DEPT -- MAIN
WHERE DEPTNO = (SELECT DEPTNO FROM EMP WHERE ENAME = 'SCOTT');

SELECT DNAME FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO AND ENAME = 'SCOTT';

-- 서브쿼리의 종류 (2) 다중행 서브쿼리 : 서브쿼리 결과가 2행 이상  = IN, ANY, ALL, EXIST
  --EX. JOB이 MANAGER인 사람의 부서이름
SELECT DEPTNO FROM EMP WHERE JOB = 'MANAGER';  -- SUB

SELECT DNAME FROM DEPT -- MAIN
   WHERE DEPTNO IN (SELECT DEPTNO FROM EMP WHERE JOB = 'MANAGER'); 


-- ** 2. 단일행 서브쿼리
   -- 아래 문제 전처리
   SELECT E.DEPTNO, D.LOC FROM EMP E ,DEPT D WHERE E.DEPTNO= D.DEPTNO AND ENAME='SCOTT';
   INSERT INTO DEPT VALUES (50, 'IT', 'DALLAS');
   INSERT INTO EMP (EMPNO, ENAME, DEPTNO) VALUES (9999, '홍길동', 50);
   ROLLBACK;
   
   -- EX. SCOTT과 같은 부서번호인 사람의 이름과 급여를 출력하시오.
SELECT DEPTNO FROM EMP WHERE ENAME ='SCOTT'; -- SUB
SELECT ENAME, SAL FROM EMP                   -- MAIN
   WHERE DEPTNO = (SELECT DEPTNO FROM EMP WHERE ENAME ='SCOTT') AND ENAME!='SCOTT';



   -- EX. SCOTT과 동일한 근무지(DALLAS)에서 근무하는 사원의 이름, 근무지명, 급여를 출력하시오
SELECT LOC FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO AND ENAME ='SCOTT';   
SELECT E.ENAME "이름", D.LOC "근무지", E.SAL "급여" FROM EMP E, DEPT D                   -- MAIN
   WHERE E.DEPTNO=D.DEPTNO 
   AND LOC = (SELECT LOC FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO AND ENAME ='SCOTT') 
   AND ENAME!='SCOTT';
    ROLLBACK; -- 데이터 추가 취소 (DML - 데이터추가, 수정, 삭제를 취소)
 -- EX. 최초입사일과 최소입사한사람, 
 SELECT MIN(HIREDATE) FROM EMP;
 SELECT HIREDATE, ENAME FROM EMP
 WHERE HIREDATE = (SELECT MIN(HIREDATE) FROM EMP);
 --     최근입사일과 최근입사한사람이름
 SELECT MAX(HIREDATE) FROM EMP;
 SELECT HIREDATE, ENAME FROM EMP
 WHERE HIREDATE = (SELECT MAX(HIREDATE) FROM EMP);
 --     최근입사일과 최근입사한사람, 최초입사일과 최초입사한사람이름
SELECT (SELECT MAX(HIREDATE) FROM EMP) "LAST", 
        (SELECT HIREDATE, ENAME FROM EMP
        WHERE HIREDATE = (SELECT MAX(HIREDATE) FROM EMP)) "LASTMAN",
        (SELECT MIN(HIREDATE) FROM EMP) "FIRST",
        (SELECT HIREDATE, ENAME FROM EMP
        WHERE HIREDATE = (SELECT MIN(HIREDATE) FROM EMP)) "FIRSTMAN"
        FROM DUAL;
        
 
SELECT E1.HIREDATE "최근입사일", E1.ENAME"최근입사인", E2.HIREDATE "최초입사일", E2.ENAME "최초입사인"
FROM EMP E1 , EMP E2
WHERE E1.DEPTNO = E2.DEPTNO
      AND E1.HIREDATE = (SELECT MIN(HIREDATE) FROM EMP)
      AND E2.HIREDATE = (SELECT MAX(HIREDATE) FROM EMP);
      
  --EX. SCOTT과 같은 부서의 근무하는 사람들의 급여 합을 구하라.
SELECT DEPTNO FROM EMP WHERE ENAME = 'SCOTT'; -- SUB

SELECT SUM(SAL) FROM EMP --MAIN
 WHERE DEPTNO = (SELECT DEPTNO FROM EMP WHERE ENAME = 'SCOTT' );
 
  --EX. SCOTT과 같은 직책의 사람들의 모든 필드을 구하라.
SELECT * FROM EMP WHERE JOB = (SELECT JOB FROM EMP WHERE ENAME = 'SCOTT' )  ;

  -- DALLAS에서 근무하는 사원의 이름, 부서번호
SELECT DEPTNO FROM DEPT WHERE LOC = 'DALLAS'; -- SUB
SELECT ENAME, DEPTNO FROM EMP WHERE DEPTNO = (SELECT DEPTNO FROM DEPT WHERE LOC = 'DALLAS'); -- MAIN

 --EX. KING이 직속 상사인 사원의 이름과 급여를 구하시오.
SELECT EMPNO FROM EMP WHERE ENAME ='KING'; --서브쿼리
SELECT ENAME, SAL FROM EMP WHERE MGR = (SELECT EMPNO FROM EMP WHERE ENAME ='KING') ; -- MAIN

-- 같은 예제를 셀프 조인을 넣어서 구해보세요.
SELECT C.ENAME, C.SAL 
FROM EMP M, EMP C
WHERE C.MGR = M.EMPNO AND M.ENAME = 'KING';

-- 탄탄다지기 1. 평균 급여 이하로 받는 사원의 이름과 급여를 출력하시오.
SELECT ROUND(AVG(SAL)) FROM EMP; -- SUB

SELECT ENAME, SAL 
FROM EMP
WHERE SAL <= (SELECT ROUND(AVG(SAL)) FROM EMP)
ORDER BY SAL DESC;

-- 탄탄다지기 1-1. 평균 급여 이하로 받는 사원의 이름과 급여, 평균급여를 출력하시오.

SELECT ENAME, SAL , (SELECT ROUND(AVG(SAL)) FROM EMP) "평균급여"
FROM EMP
WHERE SAL <= (SELECT ROUND(AVG(SAL)) FROM EMP)
ORDER BY SAL DESC;





























